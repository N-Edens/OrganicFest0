@page "/Frivillig"
@using OrganicFest0.Client.Services
@using OrganicFest.Shared
@inject IVagtService VagtService
@inject NavigationManager NavigationManager

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12 mt-3">
            <button class="btn btn-primary" @onclick="GåTilMinProfil">Min Profil</button>
        </div>
    </div>
</div>
<br>
        <!-- Left Box -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h4>Alle Vagter</h4>

                    @if (vagtList == null)
                    {
                        <p>Loading...</p>
                    }
                    else if (vagtList.Count == 0)
                    {
                        <p>Ingen vagter fundet.</p>
                    }
                    else
                    {
                        @foreach (var vagt in vagtList)
                        {
                            <div class="mb-3">
                                <strong>VagtID:</strong> @vagt.VID<br />
                                <strong>Jobnavn:</strong> @vagt.Jobnavn<br /> 
                                <strong>Description:</strong> @vagt.Description<br />    
                                <strong>StartDate:</strong> @vagt.Startdate<br />
                                <strong>EndDate:</strong> @vagt.Enddate<br />
                                <strong>Priority:</strong> <p class="@GetPriorityClass(vagt.Priority)">@GetPriorityText(vagt.Priority)</p> <br/>
                                <button class="btn btn-sm btn-success" @onclick="() => AddVagtToRightBox(vagt)">Tilføj</button>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteVagt(vagt)">Slet</button>
                            </div>
                            <hr />
                        }
                    }
                </div>
            </div>
        </div>

        <!-- Right Box -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h4>Mine Vagter</h4>
                    <!-- Display vagter added to the right box -->
                    <ul>
                        @foreach (var vagt in mineVagter)
                        {
                            <div class="mb-3">
                                <strong>VagtID:</strong> @vagt.VID<br />
                                <strong>Jobnavn:</strong> @vagt.Jobnavn<br /> 
                                <strong>Description:</strong> @vagt.Description<br />
                                <strong>StartDate:</strong> @vagt.Startdate<br />
                                <strong>EndDate:</strong> @vagt.Enddate<br />
                                <strong>Priority:</strong> <p class="@GetPriorityClass(vagt.Priority)">@GetPriorityText(vagt.Priority)</p> <br/>
                                <button class="btn btn-sm btn-success" @onclick="() => FjernVagtFromRightBox(vagt)">Fjern</button>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteVagt(vagt)">Slet</button>
                            </div>
                            <hr />
                        }
                    </ul>
                </div>
            </div>
        </div>

@code {
    private List<Vagt> vagtList = new List<Vagt>();
    private List<Vagt> mineVagter = new List<Vagt>();
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var allVagts = await VagtService.GetAllVagts();
            vagtList = allVagts.OrderByDescending(vagt => vagt.Priority).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fejl: {ex.Message}");
        }
    }

    private async Task DeleteVagt(Vagt vagt)
    {
        vagtList.Remove(vagt);
        mineVagter.Remove(vagt);
    }

    private async Task AddVagtToRightBox(Vagt vagt)
    {
        mineVagter.Add(vagt);
        vagtList.Remove(vagt);
    }

    private async Task FjernVagtFromRightBox(Vagt vagt)
    {
        vagtList.Add(vagt);
        mineVagter.Remove(vagt);
    }

    private string GetPriorityClass(bool? priority)
    {
        if (priority.HasValue)
        {
            return priority.Value ? "priority" : "";
        }

        return ""; 
    }

    private string GetPriorityText(bool? priority)
    {
        if (priority.HasValue)
        {
            return priority.Value ? "Prioriteret" : "Ikke Prioriteret";
        }
        
        return "Vagt opretet uden om systemet"; 
        
    }
    // styre URL-navigation imellem sider via link tilknyttet til knap.

    private void GåTilMinProfil()
    {
        NavigationManager.NavigateTo("/minprofil");
    }
}
