@page "/Frivillig"
@using OrganicFest0.Client.Services
@using OrganicFest.Shared
@inject IVagtService VagtService
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject NavigationManager NavManager

<div class="container-fluid">
    <h1>Welcome, @frivillig?.Name FID: @frivillig?.FID</h1>

    <div class="mb-3">
        <button class="btn btn-warning" @onclick="HandleLogout">Log out</button>
    </div>

    <div class="row">

        <!-- Left Box -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h4>Alle Vagter</h4>

                    @if (vagtList == null)
                    {
                        <p>Loading...</p>
                    }
                    else if (vagtList.Count == 0)
                    {
                        <p>Ingen vagter fundet.</p>
                    }
                    else
                    {
                        @foreach (var vagt in vagtList)
                        {
                            <div class="mb-3">
                                <strong>VagtID:</strong> @vagt.VID<br />
                                <strong>Jobnavn:</strong> @vagt.Jobnavn<br />
                                <strong>StartDate:</strong> @vagt.Startdate<br />
                                <strong>EndDate:</strong> @vagt.Enddate<br />
                                <button class="btn btn-sm btn-success" @onclick="() => AddVagtToRightBox(vagt)">Tilføj</button>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteVagt(vagt)">Slet</button>
                            </div>
                            <hr />
                        }
                    }
                </div>
            </div>
        </div>

        <!-- Right Box -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h4>Mine Vagter</h4>
                    <!-- Display vagter added to the right box -->
                    <ul>
                        @foreach (var vagt in mineVagter)
                        {
                            <div class="mb-3">
                                <strong>VagtID:</strong> @vagt.VID<br />
                                <strong>FrivilligID:</strong> @vagt.FID<br />
                                <strong>Jobnavn:</strong> @vagt.Jobnavn<br />
                                <strong>StartDate:</strong> @vagt.Startdate<br />
                                <strong>EndDate:</strong> @vagt.Enddate<br />
                                <button class="btn btn-sm btn-success" @onclick="() => FjernVagtFromRightBox(vagt)">Fjern</button>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteVagt(vagt)">Slet</button>
                            </div>
                            <hr />
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Vagt> vagtList = new List<Vagt>();
    private List<Vagt> mineVagter = new List<Vagt>();
    private Frivillig frivillig;

    protected override async Task OnInitializedAsync()
    {
        frivillig = await localStore.GetItemAsync<Frivillig>("loggedInUser");

        if (frivillig == null)
            NavManager.NavigateTo("/login");
        else
        {
            try
            {
                // Brug VagtService til at få alle vagter
                vagtList = (await VagtService.GetAllVagts()).ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Fejl: {ex.Message}");
            }
        }
    }

    // Metode til at håndtere sletning af en vagt
    private async Task DeleteVagt(Vagt vagt)
    {
        // Fjern den valgte vagt fra listen
        vagtList.Remove(vagt);
        mineVagter.Remove(vagt);
    }

    // Metode til at håndtere tilføjelse af en vagt til højre boks
    private async Task AddVagtToRightBox(Vagt vagt)
    {
        // Tilføj den valgte vagt til højre boks
        mineVagter.Add(vagt);
        vagtList.Remove(vagt);
    }

    // Metode til at håndtere fjernelse af en vagt fra højre boks
    private async Task FjernVagtFromRightBox(Vagt vagt)
    {
        // Tilføj den valgte vagt til venstre boks
        vagtList.Add(vagt);
        mineVagter.Remove(vagt);
    }

    // Metode til at håndtere logud
    private void HandleLogout()
    {
        localStore.RemoveItemAsync("loggedInUser");
        NavManager.NavigateTo("/login");
    }
}
