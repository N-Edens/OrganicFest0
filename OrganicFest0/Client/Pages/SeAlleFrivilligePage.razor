@page "/SeFrivillige"
@using OrganicFest.Shared
@using OrganicFest.Client.Services
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject NavigationManager NavManager
@inject IBrugerService BrugerService

<PageTitle>Se Frivillige</PageTitle>

<h1>Se frivillige</h1>

@if (visRedigeringsFormular)
{
    <!-- Vis en formular til redigering af frivillig -->
<EditForm Model="@frivillig" OnValidSubmit="ChangeFrivillig">
    <!-- Valideringskomponenter -->
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="col-md-12 mb-6">
        <label for="Navn">Navn</label>
        <InputText id="Navn" @bind-Value="frivillig.Name" class="form-control"  />
    </div>
    <div class="col-md-12 mb-6">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="frivillig.Email" class="form-control"  />
    </div>
    <div class="col-md-12 mb-6">
        <label for="Telefonnummer">Telefonnummer</label>
        <InputNumber class="form-input" @bind-Value="frivillig.Telefonnummer" />
    </div>

    <div class="col-md-12 mb-6">
        <label for="IsCoordinator">Koordinator</label>
        <InputCheckbox id="IsCoordinator" @bind-Value="frivillig.IsCoordinator" />
    </div>

    <button class="form-submit" type="submit">Gem</button>
</EditForm>
}

<table class="table">
    <thead>
        <tr>
            <th>FrivilligID</th>
            <th>Navn</th>
            <th>Email</th>
            <th>Telefonnummer</th>
            <th>Koordinator</th>
            <th>Password</th>
            <th>Handlinger</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var frivillig in alleFrivillige)
        {
            <tr>
                <td>@frivillig.FID</td>
                <td>@frivillig.Name</td>
                <td>@frivillig.Email</td>
                <td>@frivillig.Telefonnummer</td>
                <td>@frivillig.IsCoordinator</td>
                <td>@frivillig.Password</td>
                <td>
                    <button class="form-submit" @onclick="() => RedigerFrivillig(frivillig)">Rediger Profil</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => SletFrivillig(frivillig.FID)">Slet</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    // Deklaration og initialisering af en liste (container) af Bruger-objekter
    private Bruger frivillig = new Bruger();
    // Deklaration og initialisering af en liste (container) af Bruger-objekter
    private List<Bruger> alleFrivillige = new List<Bruger>();
    // Boolean der gør det muligt at kunne redigere. Se RedigerFrivillig og ChangeFrivillig.
    private bool visRedigeringsFormular = false;

    protected override async Task OnInitializedAsync()
    {
        var currentUser = await localStore.GetItemAsync<Bruger>("loggedInUser");
        if (currentUser == null)
            NavManager.NavigateTo("/login");

        if (!currentUser.IsCoordinator)
        {
            NavManager.NavigateTo("/frivillig");
            return;
        }

        alleFrivillige = (await BrugerService.GetAllBruger()).ToList();
    }

    // Her åbnes VisRedgeringsFormular og gør det muligt at redigere i den frivillig Profil
    // som er valgt udfra RedigerFrivillig knappen
    private void RedigerFrivillig(Bruger ValgteBruger)
    {
        frivillig = ValgteBruger;
        visRedigeringsFormular = true;
    }

    // Her lukkes VisRedigeringsFormular og gemmer data i både LocalStorage og på Databasen
    private async Task ChangeFrivillig()
    {
        visRedigeringsFormular = false;
        await BrugerService.UpdateBruger(frivillig);
        await localStore.SetItemAsync("loggedInUser", frivillig);
    }

    // Sletter profil og sender det tilbage til LoginPage
    private async Task SletFrivillig(int FID)
    {
        await BrugerService.DeleteBruger(FID);
        alleFrivillige = (await BrugerService.GetAllBruger()).ToList();
    }
}
