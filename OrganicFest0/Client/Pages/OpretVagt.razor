@page "/OpretVagt"
@using OrganicFest.Shared
@inject HttpClient Http;

<PageTitle>Tilføj Vagter</PageTitle>

<h1>TILFØJ VAGTER</h1>

<!-- Formular til at tilføje en vagt -->
<EditForm Model="vagt" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Dropdown-menu til at vælge et job -->
    <div>
        <label for="Jobnavn" class="bold-label"> Job :</label>
        <select @bind="vagt.Jobnavn" class="form-control">
            <option value=""> ---- Vælg job her ----- </option>
            @if (jobs == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                @foreach (var job in jobs)
                {
                    <option value="@job.Jobnavn">@job.Jobnavn</option>
                }
            }
        </select>
    </div>

    <!-- Input-felter til at indtaste beskrivelse, start- og slutdato -->
    <div class="col-md-12 mb-6">
        <label for="Beskrivelse">Beskrivelse</label>
        <InputText id="Beskrivelse" @bind-Value="vagt.Description" class="form-control" style="height: 150px;" required />
    </div>
    <div class="col-md-6 mb-3">
        <label for="StartDateTime">Start DateTime</label>
        <InputDate id="StartDateTime" @bind-Value="vagt.Startdate" class="form-control" required />
    </div>

    <div class="col-md-6 mb-3">
        <label for="EndDateTime">End DateTime</label>
        <InputDate id="EndDateTime" @bind-Value="vagt.Enddate" class="form-control" required />
    </div>

    <div class="col-12 mb-3">
        <button type="submit" class="btn btn-primary">Tilføj</button>
    </div>
</EditForm>

@code {
    Vagt vagt = new Vagt();

    // Metode der kaldes når formularen submitter
    public async Task HandleValidSubmit()
    {
        try
        {
            // Sender en POST-anmodning til API'en for at tilføje en vagt
            var response = await Http.PostAsJsonAsync("api/vagt/add", vagt);

            if (response.IsSuccessStatusCode)
            {
                // Nulstil felterne i formularen efter succesfuld tilføjelse
                vagt = new Vagt();
            }
            else
            {
                // Håndter fejl, f.eks. vis en besked til brugeren
                Console.WriteLine($"Fejl: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            // Håndter eventuelle undtagelser
            Console.WriteLine($"Fejl: {ex.Message}");
        }
    }

    private List<Job> jobs = new List<Job>();

    // Metode der kaldes når komponenten initialiseres
    protected override async Task OnInitializedAsync()
    {
        jobs = await Http.GetFromJsonAsync<List<Job>>("api/job/getall");  // Henter jobs fra API'en
    }
}
