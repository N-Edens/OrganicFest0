@page "/SeVagter"
@using OrganicFest.Shared
@using OrganicFest.Client.Services
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject NavigationManager NavManager
@inject IVagtService VagtService
@inject IAfdelingService AfdelingService

<PageTitle>Se Vagter</PageTitle>

<h1>SE VAGTER</h1>

@if (visRedigeringsFormular)
{
<EditForm Model="@vagt" OnValidSubmit="ChangeVagt">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label for="Afdelingsnavn" class="bold-label"> Job :</label>
        <select @bind="vagt.Afdelingsnavn " class="form-control">
            <option value=""> ---- Vælg afdeling her ----- </option>
            @if (afdelinger == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                @foreach (var afdeling in afdelinger)
                {
                    <option value="@afdeling.Afdelingsnavn">@afdeling.Afdelingsnavn</option>
                }
            }
        </select>
    </div>

    <div class="col-md-12 mb-6">
        <label for="Beskrivelse">Beskrivelse</label>
        <InputText id="Beskrivelse" @bind-Value="vagt.Beskrivelse" class="form-control" style="height: 150px;" required />
    </div>
    <div class="col-md-6 mb-3">
        <label for="StartDateTime">Start DateTime</label>
        <input type="datetime-local" id="StartDateTime" @bind="vagt.Startdate" class="form-control" required />
    </div>

    <div class="col-md-6 mb-3">
        <label for="EndDateTime">End DateTime</label>
        <input type="datetime-local" id="EndDateTime" @bind="vagt.Enddate" class="form-control" required />
    </div>

    <button class="form-submit" type="submit">Gem</button>
</EditForm>
}

<div class="mb-3">
    <label for="frivilligFilter">Vis vagter uden frivillige</label>
    <input type="checkbox" @bind="VisTilgængeligeVagter" id="frivilligFilter" />
</div>

<div class="mb-3">
    <label for="sorterVagter">Sorter vagter efter:</label>
    <select @bind="valgtSortering" id="sorterVagter" class="form-control">
        <option value="Afdelingsnavn">Afdelingsnavn</option>
        <option value="Startdate">Startdato</option>
        <option value="Priority">Prioritet</option>
    </select>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Vagt ID</th>
            <th>FrivilligID</th>
            <th>Afdelingsnavn</th>
            <th>Beskrivelse</th>
            <th>Startdato</th>
            <th>Slutdato</th>
            <th>Prioritet</th>
            <th>Handlinger</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var vagt in filtreredeVagter)
        {
            <tr>
                <td>@vagt.VID</td>
                <td>@vagt.FID</td>
                <td>@vagt.Afdelingsnavn</td>
                <td>@vagt.Beskrivelse</td>
                <td>@(vagt.Startdate.HasValue ? vagt.Startdate.Value.ToShortDateString() : "Ingen dato")</td>
                <td>@(vagt.Enddate.HasValue ? vagt.Enddate.Value.ToShortDateString() : "Ingen dato")</td>
                <td>@vagt.PriorityAsString</td>
                <td>
                    <button class="form-submit" @onclick="() => RedigerVagt(vagt)">Rediger Profil</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => SletVagt(vagt.VID)">Slet</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    // Objekt der viser alle vagter
    List<Vagt> alleVagter = new List<Vagt>();

    // Boolean for at vise om vagter tilgængelige via checkpoint
    bool VisTilgængeligeVagter = false;

    //Style for hvad der vises i form af sotering - Se mere FilterOgSorterVagter
    string valgtSortering = "Afdelingsnavn";

    // Objekt for at filtrere og sortere vagter
    List<Vagt> filtreredeVagter => FilterOgSorterVagter();

    // Objekt for at kunne lave frivilligfilter
    private Bruger frivillig = new Bruger();

    // Objekt For at kunne få alle afldelinger
    private List<Afdeling> afdelinger = new List<Afdeling>();

    // Gør at når man går til siden sikres det at man er logget ind og viser liste over allevagter.
    protected override async Task OnInitializedAsync()
    {
        alleVagter = (await VagtService.GetAllVagts()).ToList();

        var currentUser = await localStore.GetItemAsync<Bruger>("loggedInUser");
        if (currentUser == null)
            NavManager.NavigateTo("/login");

        if (!currentUser.IsCoordinator)
        {
            NavManager.NavigateTo("/login");
            return;
        }

        afdelinger = (await AfdelingService.GetAllAfdelinger()).ToList();

    }

    //Gør at man kan filtere vagter sådan man kun se dem med FID værdi 0
    // gør at man kan sortere vagterl
    private List<Vagt> FilterOgSorterVagter()
    {
        List<Vagt> filtrerede;

        if (VisTilgængeligeVagter)
        {
            filtrerede = alleVagter.Where(v => v.FID == 0).ToList();
        }
        else
        {
            filtrerede = alleVagter.ToList();
        }

        if (valgtSortering == "Startdate")
        {
            filtrerede = filtrerede.OrderBy(v => v.Startdate).ToList();
        }
        else if (valgtSortering == "Priority")
        {
            filtrerede = filtrerede.OrderByDescending(v => v.Priority).ToList();
        }
        else
        {
            filtrerede = filtrerede.OrderBy(v => v.Afdelingsnavn).ToList();
        }

        return filtrerede;
    }
    // Objekt for at vise detaljer om en specifik vagt
    private Vagt vagt = new Vagt();

    // Boolean for at styre synligheden af redigeringsformularen
    private bool visRedigeringsFormular = false;

    // Gør man kan redigere i en vagt.
    private void RedigerVagt(Vagt selectedVagt)
    {
        vagt = selectedVagt;
        visRedigeringsFormular = true;
    }
    // gemmer ændringerne der er lavet i vagten.
    private async Task ChangeVagt()
    {
        visRedigeringsFormular = false;
        await VagtService.UpdateVagt(vagt);
    }

    private async Task SletVagt(int VID)
    {
        await VagtService.DeleteVagt(VID);

        alleVagter = (await VagtService.GetAllVagts()).ToList();
    }
}
