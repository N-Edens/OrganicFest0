@page "/OpretFrivillig"
@using OrganicFest.Client.Services
@inject IBrugerService BrugerService
@using OrganicFest.Shared

<PageTitle>Tilføj Frivillige</PageTitle>

<h1>Ønsker du at være frivillig til OrganicFest?</h1>
<h1>Bliv frivillig her</h1>

<EditForm Model="bruger" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="col-md-12 mb-6">
        <label for="Navn">Navn</label>
        <InputText id="Navn" @bind-Value="bruger.Name" class="form-control" required />
    </div>
    <div class="col-md-12 mb-6">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="bruger.Email" class="form-control" required />
    </div>
    <div class="col-md-12 mb-6">
        <label for="TelefonNummer">Telefon Nummer</label>
        <InputNumber id="TelefonNummer" @bind-Value="bruger.Telefonnummer" class="form-control" required minlength="8" maxlength="8" />
        <ValidationMessage For="@(() => bruger.Telefonnummer)" />
    </div>
    <div class="col-md-12 mb-6">
        <label for="Password">Password</label>
        <InputText id="Password" @bind-Value="bruger.Password" class="form-control" required />
    </div>

    <div class="col-12 mb-3">
        <button type="submit" class="btn btn-primary">Tilføj</button>
    </div>

    <p>@validationError</p>

    <p>Already registered? <NavLink href="/login">Click here to log in</NavLink></p>
</EditForm>

@code {
    // Deklaration og initialisering af en liste (container) af Bruger-objekter
    Bruger bruger = new Bruger();

    // Fejlmeddelelse, der vises, hvis der opstår en valideringsfejl
    string validationError;

    // Gør at telefonnummeret skal være 8 tal ellers fejlmeddelse
    // Opretter ny bruger
    async Task HandleValidSubmit()
    {
        if (bruger.Telefonnummer.ToString().Length != 8)
        {
            validationError = "Phone number must be 8 digits.";
            return;
        }

        await BrugerService.AddBruger(bruger);

        bruger = new Bruger();
        validationError = null;
    }
}
