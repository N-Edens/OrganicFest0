@page "/Login"
@using OrganicFest.Shared
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject HttpClient Http
@inject NavigationManager NavManager

<h1>Login</h1>

<EditForm Model="bruger" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Email">Email:</label>
        <InputText id="Email" @bind-Value="bruger.Email" class="form-control" required />
    </div>

    <div class="mb-3">
        <label for="Password">Password:</label>
        <InputText id="Password" @bind-Value="bruger.Password" type="password" class="form-control" required />
    </div>

    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Login</button>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }

    <p>Ikke registreret endnu? <NavLink href="/OpretFrivillig">Klik her</NavLink></p>
</EditForm>

@code {
    //Objekt for HandleValidSubmit som logger brugere ind
    private Bruger bruger = new Bruger();

    // Style for fejlmeddelse når en bruger ikke findes. se HandleValidSumbit
    private string errorMessage;

    // Hvis brugeren findes logges brugeren ind og kommer ind på FrivilligPage ellers forkert email eller password
    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync<Bruger>("api/frivillig/login", bruger);

        if (response.IsSuccessStatusCode)
        {
            var loggedInUser = await response.Content.ReadFromJsonAsync<Bruger>();
            await localStore.SetItemAsync("loggedInUser", loggedInUser);
            NavManager.NavigateTo("/Frivillig", true);
        }
        else
        {
            errorMessage = "Forkert email eller password.";
        }
    }
}