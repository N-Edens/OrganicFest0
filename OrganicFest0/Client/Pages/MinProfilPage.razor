@page "/minprofil"
@using OrganicFest.Shared
@using OrganicFest.Client.Services
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject NavigationManager NavManager
@inject IBrugerService BrugerService

<div class="form-container">
    <h3>Min Profil</h3>

    <button class="form-submit" @onclick="RedigerProfil">Rediger din profil</button>

    <div style="margin-top: 10px;">
        @if (visRedigeringsFormular)
        {
            <EditForm Model="@bruger" OnValidSubmit="ChangeProfil">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label class="form-label">Name:</label>
                    <InputText class="form-input" @bind-Value="bruger.Name" />
                </div>

                <div class="form-group">
                    <label class="form-label">Email:</label>
                    <InputText class="form-input" @bind-Value="bruger.Email" />
                </div>

                <div class="form-group">
                    <label class="form-label">Telefonnummer:</label>
                    <InputNumber class="form-input" @bind-Value="bruger.Telefonnummer" />
                </div>

                <button class="form-submit" type="submit">Gem</button>
            </EditForm>
        }
        else
        {
            <p><strong>Name:</strong> @bruger.Name</p>
            <p><strong>Email:</strong> @bruger.Email</p>
            <p><strong>Telefonnummer:</strong> @bruger.Telefonnummer</p>
        }

        <button class="btn btn-danger btn-sm" @onclick="() => SletProfil(bruger.FID)">Slet</button>

    </div>
</div>

@code {
    // tjekker om bruger logget ind ellers sendes tilbage til LoginPage
    protected override async Task OnInitializedAsync()
    {
        bruger = await localStore.GetItemAsync<Bruger>("loggedInUser");

        if (bruger == null)
            NavManager.NavigateTo("/login");
    }
    // Deklaration og initialisering af en liste (container) af Bruger-objekter
    private Bruger bruger = new Bruger();

    // Boolean der gør det muligt at kunne redigere. Se RedigerProfil og ChangeProfil.
    private bool visRedigeringsFormular = false;

    // Åbner visRedigeringsFormular op og gør det muligt at redigere i din profil
    private void RedigerProfil()
    {
        visRedigeringsFormular = true;

    }

    // Her lukkes visRedigeringsFormular og ændre i både LocalStorage og på Databasen
    private async Task ChangeProfil()
    {
        visRedigeringsFormular = false;
        await BrugerService.UpdateBruger(bruger);

        await localStore.SetItemAsync("loggedInUser", bruger);
    }

    // Sletter profil og sender det tilbage til LoginPage
    private async Task SletProfil(int FID)
    {
        await BrugerService.DeleteBruger(FID);

        localStore.RemoveItemAsync("loggedInUser");

        NavManager.NavigateTo("/login");
    }

}